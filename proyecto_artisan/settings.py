"""
Django settings for proyecto_artisan project.

Generated by 'django-admin startproject' using Django 3.2.25.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
import rsa
import os
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-5#vo*1=u-v*5i@4@5q_ei)+!*=qoh5+@&ut-sr2d!*av6i(glf'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['170.187.146.155']


# Application definition

INSTALLED_APPS = [
    'registration',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'administrador',
    'nucleo',
    'usuarios',
    'ordendecompra',
    'proveedores',
    'ventas',
    'produccion',
    'estado', 
    'clientes', 
    'inventario',
    'pauta',
    'logistica',
    'equipo',
    'perfil',
    'calidad',
    'solicitudes',
    'costeo',
    'django_filters',
    'rest_framework',
    'rest_framework_datatables',
    'debug_toolbar',
    'simple_history',
    'django_celery_beat',
    'mathfilters',
    'crispy_forms',
    'crispy_bootstrap4', 

    
]

CRISPY_TEMPLATE_PACK = 'bootstrap4'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'debug_toolbar.middleware.DebugToolbarMiddleware',
    'simple_history.middleware.HistoryRequestMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',  # Asegúrate de que esto esté presenteZGHJK
]

AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend', # this is default
)

ROOT_URLCONF = 'proyecto_artisan.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates/'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'nucleo.context_processors.bodegasnav',
                'nucleo.context_processors.valoriva'
            ],
        },
    },
]

WSGI_APPLICATION = 'proyecto_artisan.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',  # Motor de la base de datos
        'NAME': 'artisan',  # Nombre de la base de datos
        'USER': 'root',  # Usuario de MySQL
        'PASSWORD': '12389138sadjsadhKFHSH#!',  # Contraseña del usuario
        'HOST': 'localhost',  # Dirección de la base de datos
        'PORT': '3306',  # Puerto por defecto de MySQL
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'es-CL'

TIME_ZONE = 'America/Santiago'

USE_I18N = True

USE_L10N = False


USE_TZ = False
DJANGO_CELERY_BEAT_TZ_AWARE=False

USE_THOUSAND_SEPARATOR = True

THOUSAND_SEPARATOR = '.'

DECIMAL_SEPARATOR=','


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'static'


# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Media files
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

LOGIN_REDIRECT_URL = 'home'
LOGOUT_REDIRECT_URL = 'login'

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'  # o el servidor SMTP que estés usando
EMAIL_PORT = 587  # puerto para TLS
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'katalinagatita7520@gmail.com'
EMAIL_HOST_PASSWORD = 'ypud mazg jowm xmwj'

REST_FRAMEWORK = {
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',
        'rest_framework_datatables.renderers.DatatablesRenderer',
    ),
    'DEFAULT_FILTER_BACKENDS': (
        'rest_framework_datatables.filters.DatatablesFilterBackend',
    ),
    'DEFAULT_PAGINATION_CLASS': 'rest_framework_datatables.pagination.DatatablesPageNumberPagination',
    'PAGE_SIZE': 50,
    'DATETIME_FORMAT': "%d-%m-%Y %H:%M:%S",
    'DATE_FORMAT': "%d-%m-%Y"
}


# Configuración PDF
CONFIGURACION_PDF = {
    'razon_social': 'ELABORADORA DE ALIMENTOS GOURMET LTDA.',
    'rut': '76.059.975-1',
    'direccion': 'Presidente Eduardo Frei Montalva 9950 Local 4',
    'comuna': 'Quilicura',
    'contacto': 'Administracion@quesosartisan.cl / +569 7648 4626',
    'giro': 'Elaboración y Comercialización De Productos Lacteos'
}

# IVA
IVA = 0.19

# Configuración para integrar con Chipax
CHIPAX_KEYS = {
    "app_id": os.environ.get('CHIPAX_APP_ID', ''),  # ID de la aplicación, obtenido de las variables de entorno
    "secret_key": os.environ.get('CHIPAX_APP_SECRET_KEY', '')  # Clave secreta, también obtenida de las variables de entorno
}

# Configuración para integrar con Jumpseller
JUMP_SELLER_KEYS = {
    "auth": os.environ.get('JUMP_SELLER_AUTH', ''),  # Token de autenticación, obtenido de las variables de entorno
    "login": os.environ.get('JUMP_SELLER_LOGIN', '')  # Credenciales de inicio de sesión, obtenidas de las variables de entorno
}

# Configuración para integrar con DriveTech
DRIVETECH_KEY = os.environ.get('DRIVETECH_KEY')  # Clave de acceso a la API de DriveTech, obtenida de las variables de entorno

# REGIONES
REGIONES = [
    ('Metropolitana', 'Región Metropolitana'),
    ('Tarapacá', 'Tarapacá'),
    ('Antofagasta', 'Antofagasta'),
    ('Atacama', 'Atacama'),
    ('Coquimbo', 'Coquimbo'),
    ('Valparaiso', 'Valparaíso'),
    ('OHiggins', 'Región del Libertador Gral. Bernardo OHiggins'),
    ('Maule', 'Región del Maule'),
    ('Biobío', 'Región del Biobío'),
    ('Araucanía', 'Región de la Araucanía'),
    ('Los Ríos', 'Región de Los Ríos'),
    ('Los Lagos', 'Región de Los Lagos'),
    ('Aysén', 'Región Aisén del Gral. Carlos Ibáñez del Campo'),
    ('Antártica', 'Región de Magallanes y de la Antártica Chilena'),
    ('Arica y Parinacota', 'Arica y Parinacota'),
    ('Ñuble', 'Región de Ñuble'),
]

IDENTIFICADOR_BOLETA = 'BE'

UNIDADES = [
    ('N/a', 'N/A'),
    ('Unidad', 'Unidades'),
    ('Litro', 'Litros'),
    ('Kilogramo', 'Kilogramos')
]

LISTA_BANCOS = [
    ("BANCO_ESTADO", "BANCOESTADO"),
    ("COOPEUCH", "COOPEUCH"),
    ("BANCO_BBVA", "BANCO BBVA"),
    ("BANCO_CONSORCIO", "BANCO CONSORCIO"),
    ("BANCO_RIPLEY", "BANCO RIPLEY"),
    ("BANCO_FALABELLA", "BANCO FALABELLA"),
    ("BANCO_SECURITY", "BANCO SECURITY"),
    ("BANCO_ITAU", "BANCO ITAU"),
    ("BANCO_SANTANDER", "BANCO SANTANDER"),
    ("HSBC_BANK_CHILE", "HSBC BANK CHILE"),
    ("BICE", "BICE"),
    ("CORP_BANCA", "CORPBANCA"),
    ("BANCO_DE_CREDITO_E_INVERSIONES", "BANCO DE CREDITO E INVERSIONES"),
    ("SCOTIABANK_DESARROLLO", "SCOTIABANK CHILE"),
    ("BANCO_INTERNACIONAL", "BANCO INTERNACIONAL"),
    ("BANCO_DE_CHILE", "BANCO DE CHILE")]

CATEGORIAS_UTENSILIOS = [
    ('utensilio de limpieza', 'Utensilio de Limpieza'),
    ('detergente', 'Detergente')
]

KEYS = {
    'privada': rsa.PrivateKey.load_pkcs1(Path('privada.PEM').read_text()),  # Carga la clave privada desde un archivo .PEM
    'publica': rsa.PublicKey.load_pkcs1(Path('publica.PEM').read_text())    # Carga la clave pública desde un archivo .PEM
}

CELERY_BROKER_URL = 'redis://redis:6379/0'  # URL del broker de Celery (Redis)
CELERY_RESULT_BACKEND = 'redis://redis:6379/0'  # Backend para almacenar los resultados de tareas (Redis)
CELERY_TIMEZONE = 'America/Santiago'  # Zona horaria para las tareas programadas en Celery

SALTARPICKEO = True
